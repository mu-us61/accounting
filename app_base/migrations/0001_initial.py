# Generated by Django 4.2.6 on 2024-05-20 12:02

import app_base.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import embed_video.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MuUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('username', models.CharField(error_messages={'unique': 'Bu isimde bir kullanici zaten var'}, help_text='Max 150 karakter olabilir. Harfler, sayilar ve sadece @/./+/-/_ olabilir', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Kullanıcı Adı')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='İsim')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Kullanıcının bu yönetici paneline giriş yapabilmesini belirler.', verbose_name='Yönetici Durumu')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('abbreviation', models.CharField(max_length=10, unique=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DummyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ExelUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MobileFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='mobile_files/')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Yetkiler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_read_can_kullanicilar', models.BooleanField(default=False)),
                ('can_read_kullanici_gruplari', models.BooleanField(default=False)),
                ('can_read_excel_kullanici_yukleme', models.BooleanField(default=False)),
                ('can_read_excel_kullanicilari', models.BooleanField(default=False)),
                ('can_read_bakiye', models.BooleanField(default=False)),
                ('can_read_harcama_kalemi', models.BooleanField(default=False)),
                ('can_read_para_birimleri', models.BooleanField(default=False)),
                ('can_read_Islemler', models.BooleanField(default=False)),
                ('can_read_etkinlikler', models.BooleanField(default=False)),
                ('can_read_evraklar', models.BooleanField(default=False)),
                ('can_read_aylikharcamalar', models.BooleanField(default=False)),
                ('can_read_aylikispatliharcamalar', models.BooleanField(default=False)),
                ('can_read_smsyonetimi', models.BooleanField(default=False)),
                ('can_read_mobileapplinkleri', models.BooleanField(default=False)),
                ('can_write_can_kullanicilar', models.BooleanField(default=False)),
                ('can_write_kullanici_gruplari', models.BooleanField(default=False)),
                ('can_write_excel_kullanici_yukleme', models.BooleanField(default=False)),
                ('can_write_excel_kullanicilari', models.BooleanField(default=False)),
                ('can_write_bakiye', models.BooleanField(default=False)),
                ('can_write_harcama_kalemi', models.BooleanField(default=False)),
                ('can_write_para_birimleri', models.BooleanField(default=False)),
                ('can_write_Islemler', models.BooleanField(default=False)),
                ('can_write_etkinlikler', models.BooleanField(default=False)),
                ('can_write_evraklar', models.BooleanField(default=False)),
                ('can_write_aylikharcamalar', models.BooleanField(default=False)),
                ('can_write_aylikispatliharcamalar', models.BooleanField(default=False)),
                ('can_write_smsyonetimi', models.BooleanField(default=False)),
                ('can_write_mobileapplinkleri', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MuGroup',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('yetkiler', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='group', to='app_base.yetkiler')),
            ],
            options={
                'abstract': False,
            },
            bases=('auth.group', models.Model),
        ),
        migrations.CreateModel(
            name='Islemler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('islem_tarihi', models.DateTimeField(auto_now_add=True)),
                ('islemler_type', models.CharField(blank=True, choices=[('gelen', 'Gelen'), ('giden', 'Giden'), ('vakifici', 'Vakifici')], max_length=10, null=True)),
                ('islem_ismi', models.CharField(max_length=250)),
                ('islem_aciklamasi', models.TextField()),
                ('miktar', models.DecimalField(decimal_places=4, default=0, max_digits=18)),
                ('islemler_picture', models.ImageField(blank=True, null=True, upload_to=app_base.models.generate_unique_imagename)),
                ('islemler_pdf', models.FileField(blank=True, null=True, upload_to=app_base.models.generate_unique_filename)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app_base.currency')),
                ('exelusers', models.ManyToManyField(blank=True, to='app_base.exelusers')),
                ('islemsahibi', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('kimden_geldi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='gelen_paralar', to=settings.AUTH_USER_MODEL)),
                ('kime_gitti', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='giden_paralar', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, to='app_base.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EvrakModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evrak_takipno', models.CharField(max_length=250)),
                ('evrak_date', models.DateTimeField(auto_now_add=True)),
                ('evrak_last_updated', models.DateTimeField(auto_now=True)),
                ('evrak_name', models.CharField(max_length=250)),
                ('evrak_description', models.TextField()),
                ('evrak_type', models.CharField(choices=[('gelen', 'Gelen'), ('giden', 'Giden')], default='gelen', max_length=7)),
                ('evrak_picture', models.ImageField(blank=True, null=True, upload_to=app_base.models.generate_unique_imagename)),
                ('evrak_pdf', models.FileField(blank=True, null=True, upload_to=app_base.models.generate_unique_filename)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('evrak_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('evrak_tags', models.ManyToManyField(blank=True, to='app_base.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EtkinlikModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etkinlik_date', models.DateTimeField(auto_now_add=True)),
                ('etkinlik_last_updated', models.DateTimeField(auto_now=True)),
                ('etkinlik_name', models.CharField(max_length=250)),
                ('etkinlik_description', models.TextField()),
                ('etkinlik_youtubelink', embed_video.fields.EmbedVideoField(blank=True, null=True)),
                ('etkinlik_picture', models.ImageField(blank=True, null=True, upload_to=app_base.models.generate_unique_imagename)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('etkinlik_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('etkinlik_tags', models.ManyToManyField(blank=True, to='app_base.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='muuser',
            name='currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app_base.currency'),
        ),
        migrations.AddField(
            model_name='muuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='muuser',
            name='gruplar',
            field=models.ManyToManyField(blank=True, to='app_base.mugroup'),
        ),
        migrations.AddField(
            model_name='muuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
